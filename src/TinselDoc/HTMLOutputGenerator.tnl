
/// Function that converts \n to <br> for html
String nl2br(String in)
{
	int len = in.length;
	int npos = 0;
	while (npos < in.pos)
	{
		if (in.characters[npos] == '\n')
			len+=3;
		++npos;
	}
	String out(len);
	npos = 0;
	while (npos < in.pos)
	{
		if (in.characters[npos] == '\n')
			out.concat("<br>");
		else
			out.append(in.characters[npos]);
		++npos;
	}
	return out;
}

class HTMLOutputGenerator extends OutputGenerator
{
private:
	bool _table = false;
	bool _table_row = false;
public:
	void header(IOStream stream, String filename)
	{
		stream.putstring("<html><head><title>");
		stream.putstring(filename);
		stream.putstring("</title></head><body><h1>");
		stream.putstring(filename);
		stream.putstring("</h1>");
	}

	void _definition(IOStream stream, String source, String comment)
	{
		stream.putstring("<div><h2>");
		stream.putstring(source);
		stream.putstring("</h2><br><p>");
		stream.putstring(nl2br(comment));
		stream.putstring("</p></div>");
	}

	void table_begin(IOStream stream,String heading)
	{
		_table = true;
		_table_row = false;
		stream.putstring("<h2>");
		stream.putstring(heading);
		stream.putstring("</h2><table>");
	}

	void table_row(IOStream stream)
	{
		if (_table_row)
			stream.putstring("</tr>");
		stream.putstring("<tr>");
		_table_row = true;
	}

	void table_cell(IOStream stream, String cell_data)
	{
		stream.putstring("<td>");
		stream.putstring(cell_data);
		stream.putstring("</td>");
	}

	void table_finish(IOStream stream)
	{
		if (_table_row)
			stream.putstring("</tr>");
		stream.putstring("</table>");
	}
	void footer(IOStream stream)
	{
		stream.putstring("<br><br>Documentation created with Tinsel Doc</body></html>");
	}
};
