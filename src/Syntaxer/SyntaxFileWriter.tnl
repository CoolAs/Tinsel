class SyntaxFileWriter
{
	bool _open = false;
	int nxt_var_id = 0;
	File myFile;
	int expressionCount = 0;

	void printLocalVariable(Variable localVariable)
	{
		if (localVariable.default_value < 0)
		{
			myFile.putchar('@');
			myFile.putint(-localVariable.default_value - 1);
		}
		else
		{
			myFile.putchar('$');
			myFile.putint(localVariable.default_value);
		}
	}

public:

	bool open(String Filename)
	{
		_open = true;
		myFile.open(Filename,"w","ASCII");
	}

	bool startFunction(Variable functionVariable)
	{
		myFile.putstring("DEFINE ");
		if ((functionVariable.properties&PROPERTY_OBJECT)==0)
			myFile.putstring(var_type_string(functionVariable.type));
		else
		{
			myFile.putstring("OBJ(");
			myFile.putstring(functionVariable.objname);
			myFile.putstring(")");
		}
		myFile.putchar(' ');
		myFile.putstring(functionVariable.name);
		myFile.putstring("\n{\n");
		nxt_var_id = 0;
	}

	bool endFunction(Variable functionVariable)
	{
		myFile.putstring("}\n\n");
	}

	bool defineVariable(Variable defineVariable)
	{

		myFile.putstring("CREATEVAR ");
		myFile.putint(nxt_var_id);
		myFile.putchar(' ');
		if ((defineVariable.properties&PROPERTY_OBJECT)==0)
			myFile.putstring(var_type_string(defineVariable.type));
		else
		{
			myFile.putstring("OBJ(");
			myFile.putstring(defineVariable.objname);
			myFile.putstring(")");
		}
		myFile.putchar('\n');
		defineVariable.default_value = nxt_var_id;
		defineVariable.localVariable = true;
		nxt_var_id += 1;
	}
	
	bool assignmentGlobal(String name)
	{
		myFile.putstring("ASSIGN !");
		myFile.putstring(name);
		myFile.putchar(' ');
		return true;
	}

	bool assignmentLocal(Variable localVariable)
	{
		if (!localVariable.localVariable) 
			return false;
		myFile.putstring("ASSIGN ");
		printLocalVariable(localVariable);
		myFile.putchar(' ');
		return true;
	}

	bool startExpression()
	{
		if (expressionCount == 0)
		{
			myFile.putstring("( ");
			expressionCount += 1;
		}
	}

	bool expressionGlobalVariable(String name)
	{
		myFile.putchar('!');
		myFile.putstring(name);
		myFile.putchar(' ');
	}

	bool expressionLocalVariable(Variable localVariable)
	{
		if (!localVariable.localVariable)
			return false;

		printLocalVariable(localVariable);
		myFile.putchar(' ');
		return true;
	}

	bool expressionLiteral(int value)
	{
		myFile.putstring("LIT(");
		myFile.putint(value);
		myFile.putstring(") ");
	}
	bool endExpression()
	{
		if (expressionCount == 1)
		{
			myFile.putstring(")\n");
		}
		expressionCount -= 1;
	}

	bool close()
	{
		_open = false;
	}

};
