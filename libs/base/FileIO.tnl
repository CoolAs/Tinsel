import IO

//@ table File modes
//@ row mode  | meaning
//@ row    r  | read only, do not open if the file doesn't exist
//@ row    w  | write only, create file if the file doesn't exist
//@ row    r+ | read and write, do not open if the file doesn't exist
//@ row    w+ | read and write, create file if the file doesn't exist

//@ table Encodings
//@ row code  | encoding
//@ row ascii | ASCII (Returns characters as UTF-32)
//@ row  utf8 | UTF-8 (Returns characters as UTF-32)
//@ row utf32 | UTF-32 
//@ row   bin | binary file (Only uses lower 8 bits on the character)

class File extends IOStream
{
public:
	/// Attempts to open a file in the requested mode
	//@ return true on success
	bool open(String filename, String mode, String encoding)
	{
		//Attempt to open the file, return false on error
		return false;
	}

	/// Attempts to flush and close the file
	//@ return true on success
	bool close()
	{		
		return true;
	}

	/// Attempts to get the next character in the file
	//@ return negative value on error
	//@ return character value on success
	s32 getchar()
	{
		return -1;
	}

	/// Puts a character into the file
	//@ return true on success
	bool putchar(u32 character)
	{
		return false;
	}
};
